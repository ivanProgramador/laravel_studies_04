SQLserver  
 Diferente do mysql o apache não vem com os drivers de conexão de forma nativa 
 então alguns passos devem ser seguidos para que a conexão funcione  
 
 1 - instalar os drivers no computador usadno um sistema chamado "msodbcsql" 
    é um executavel que a microsoft fornece no site https://learn.microsoft.com/pt-pt/sql/connect/odbc/download-odbc-driver-for-sql-server?view=sql-server-ver17
    isso serve para instalar os drivers na raiz do seu s.o tençãoi esse e para windows 

 2 - depois disso os drivers de extenção para o PHP devem ser baixados a microsoft 
     fornece eles no site https://learn.microsoft.com/pt-pt/sql/connect/php/download-drivers-php-sql-server?view=sql-server-ver17
     sendo que vai vir varios mas dependendo da arquitetura você pode esclher de forma especifica 
     atenção sempre olhar se o s.o e thread safe com esse comando 

     php -i | findstr "Architecture Thread"

     o meu e thread safe então eu escolhi esses 2 drivers 

     php_pdo_sqlsrv_82_ts_x64.dll
     php_sqlsrv_82_ts_x64.dll

     esses drivers devem ficar na pasta "php/ext" porque são extenções(como eu disse antes não são nativos) 

  3 - depois que isso for feito a nivel de arquivo(fisico) agora se faz a parte logica(configuração) 
      o php tem um arquivo de inicialização php.ini no final dele  tem que adicionar 2 linhas 

      extension=php_sqlsrv_82_ts_x64.dll
      extension=php_pdo_sqlsrv_82_ts_x64.dll

      essas 2 linhas vão avisar ao php sobre a existencia desses drivers dentro da pasta ext, quando 
      eu acionar a conexão ele vai procurar pelos 2 na pasta ext 

   4 - a microsoft trabalha com autenticação por certificado então no caso a instalção gera sim porém
       ele ainda não sabe se você confia no certificado gerado pela instalação do sql server,entãoi isso 
       precisa ser dito a o SGBD atraves da requisição de conexão lá no aquivo de ocnfiguração do laravel
       esse arquivo fica na pasta config e se chama database.php as configurações devem estar exatamente 
       assim para funcionar atenção a linha  'trust_server_certificate' aqui eu digo que confio no 
       certificado que está no meu servidor  

        'trust_server_certificate'=> true


       ----------------------------------------------------------------------------------------------- 
        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'trust_server_certificate' => true,    <= ESTA LINHA NÃO EXISTIA EU COLOQUEI ELA AQUI  
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],


Conexão com sql server pronta 

-------------------------------------------------------------------------------------------------

Conexão com mysql é mais simples porque ele ja vem praticamente configurado então e so ir no env e colocar
os dados do banco 

#dados do meu banco de dados
 
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=laravel_mysql_database
DB_USERNAME=root
DB_PASSWORD=

---------------------------------------------------------------------------------------------------

Conexão com sqlite tambem é bem siples 

DB_CONNECTION=sqlite
DB_DATABASE=C:\xampp\htdocs\laravel_studies_04\database\laravel_sqlite_database.sqlite

---------------------------------------------------------
